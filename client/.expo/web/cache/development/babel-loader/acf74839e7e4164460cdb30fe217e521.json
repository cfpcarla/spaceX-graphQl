{"ast":null,"code":"var _jsxFileName = \"/Users/carla/src/my-future-job/client/App.js\";\nimport React, { useState, Component } from 'react';\nimport { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { apolloClient } from \"./apollo\";\nexport default function App() {\n  return React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \"xunda\");\n}\nvar defaultStarshipId = 'c3RhcnNoaXBzOjM=';","map":{"version":3,"sources":["/Users/carla/src/my-future-job/client/App.js"],"names":["React","useState","Component","ApolloProvider","useQuery","gql","apolloClient","App","defaultStarshipId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,GAAnC,QAA8C,gBAA9C;AAEA,SAASC,YAAT;AAQA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD;AAWD,IAAME,iBAAiB,GAAG,kBAA1B","sourcesContent":["import React, { useState, Component } from 'react';\nimport { ApolloProvider, useQuery, gql } from '@apollo/client';\n// import { Picker } from '@react-native-picker/picker';\nimport { apolloClient } from './apollo';\n// import { StyleSheet, View, Image, Text, Dimensions } from 'react-native';\n// import { Table, Row, Rows } from 'react-native-table-component';\n// import Accordion from 'react-native-collapsible/Accordion';\n\n\n\n\nexport default function App() {\n  return (\n    <ApolloProvider client={apolloClient}>\n      xunda\n    </ApolloProvider>\n  );\n}\n\n\n// import React from 'react';\n// import { AppLoading } from 'expo';\n// import { Accordion, Text, Icon } from 'native-base';\n// import * as Font from 'expo-font';\n// import { Ionicons } from '@expo/vector-icons';\n// import { StyleSheet, View } from 'react-native'\n\n// Imperial I-class Star Destroyer\nconst defaultStarshipId = 'c3RhcnNoaXBzOjM=';\n\n// const LIST_STARSHIPTS = gql`\n//   query listStarships {\n//     allStarships {\n//       starships {\n//         id\n//         name\n//       }\n//     }\n//   }\n// `;\n\n// const GET_STARSHIP = gql`\n//   query getStarship($id: ID!) {\n//     starship(id: $id) {\n//       id\n//       name\n//       model\n//       starshipClass\n//       manufacturers\n//       length\n//       crew\n//       costInCredits\n//       consumables\n//       filmConnection {\n//         films {\n//           id\n//           title\n//         }\n//       }\n//     }\n//   }\n// `;\n\n\n\n\n\n// export default class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isReady: false,\n//       expended: 0,\n//       data: [\n//         {\n//           id:1,\n//           month: 'January',\n//           expenses: [\n//             {\n//               name: 'Rent',\n//               value: 500,\n              \n//             },\n//             {\n//               name: 'Food',\n//               value: 230,\n//             },\n//             {\n//               name: 'Gas',\n//               value: 57,\n//             },\n//             {\n//               name: 'Car',\n//               value: 0,\n//             },\n//             {\n//               name: 'Savings',\n//               value: 717\n//             }\n//           ]\n//         },\n//         {\n//           id:2,\n//           month: 'February',\n//           expenses: [\n//             {\n//               name: 'Rent',\n//               value: 500,\n              \n//             },\n//             {\n//               name: 'Food',\n//               value: 200,\n//             },\n//             {\n//               name: 'Gas',\n//               value: 49,\n//             },\n//             {\n//               name: 'Car',\n//               value: 29,\n//             },\n//             {\n//               name: 'Savings',\n//               value: 870\n//             }\n//           ]\n//         },\n//         {\n//           id:3,\n//           month: 'Mars',\n//           expenses: [\n//             {\n//               name: 'Rent',\n//               value: 500,\n              \n//             },\n//             {\n//               name: 'Food',\n//               value: 231,\n//             },\n//             {\n//               name: 'Gas',\n//               value: 56,\n//             },\n//             {\n//               name: 'Car',\n//               value: 17,\n//             },\n//             {\n//               name: 'Savings',\n//               value: 760\n//             }\n//           ]\n//         }\n//       ]\n//     };\n//   }\n\n//   async componentDidMount() {\n//     await Font.loadAsync({\n//       Roboto: require('native-base/Fonts/Roboto.ttf'),\n//       Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\n//       ...Ionicons.font,\n//     });\n//     this.setState({ isReady: true });\n//   }\n\n//   renderHeader = (item) => {\n//     const { expended} = this.state\n//     return (\n//       <View style={styles.accordionHeader}>\n//         <Text style={{fontWeight: 'bold'}}>{item.month}</Text>\n//         <Icon \n//           type = \"AntDesign\" \n//           name = { expended === item.id ? 'upcircle' : 'downcircle' }\n//           style={{color: expended === item.id ? '#F6483B' : 'black'}}\n//         />\n//       </View>\n//     )\n//   }\n\n//   renderContent = (item) => {\n//     return (\n//       <View style={styles.accordionItems}>\n//         {item.expenses.map(m => {\n//           return (\n//             <View style={styles.accordionItemValue}>\n//               <Text style={styles.accordionItemValueName}>{m.name}</Text>\n//               <Text style={styles.accordionItemValueBadge}>+{m.value}$</Text>\n//             </View>\n//           )\n//         })}\n        \n//       </View>\n//     )\n//   }\n\n//   render() {\n//     if (!this.state.isReady) {\n//       return <AppLoading />;\n//     }\n\n    \n\n//     return (\n//       <View style={styles.container}>\n//         <View style={styles.accordion}>\n//           <Text style={styles.accordionTitle}>Expenses</Text>\n//           <Accordion \n//             style={styles.accordionItems}\n//             dataArray={this.state.data}\n//             renderHeader={this.renderHeader}\n//             renderContent={this.renderContent}\n//             onAccordionOpen={(item) => this.setState({expended: item.id})}\n//             onAccordionClose={(item) => this.setState({expended: 0})}\n//           />\n//         </View>\n        \n//       </View>\n//     );\n//   }\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     paddingBottom:20,\n//     backgroundColor: '#F6483B'\n//   },\n//   accordion:{\n//     width: '90%',\n//     backgroundColor: '#F2F2F7',\n//     borderRadius: 10,\n//     padding:20,\n//     justifyContent: 'center'\n//   },\n//   accordionHeader: {\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     flexDirection: 'row',\n//     marginVertical: 10,\n//     backgroundColor: 'white',\n//     borderRadius: 5,\n//     padding:10,    \n\n//   },\n//   accordionTitle: {\n//     fontSize: 20, \n//     fontWeight:'bold',\n//     marginBottom: 20,\n//     color: '#62625A'\n//   },\n//   accordionItems: {\n//     borderRadius: 5,\n//     backgroundColor:'white',\n\n//   },\n//   accordionItemValue:{\n//     flexDirection: 'row',\n//     justifyContent:\"space-between\",\n//     padding: 10,\n\n//   },\n//   accordionItemValueBadge: {\n//     color: '#42C382',\n//     padding: 5,\n//     fontWeight: 'bold'\n//   },\n//   accordionItemValueName: {\n//     color: '#62625A'\n//   }\n// })\n\n\n\n"]},"metadata":{},"sourceType":"module"}